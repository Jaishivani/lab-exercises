def calculate_roots(a, b, c):
    # Calculate the discriminant
    discriminant = b**2 - 4*a*c
    
    # Calculate the roots
    if discriminant > 0:
        root1 = (-b + discriminant**0.5) / (2*a)
        root2 = (-b - discriminant**0.5) / (2*a)
        print(f"Roots: {root1:.2f}, {root2:.2f}")
    elif discriminant == 0:
        root = -b / (2*a)
        print(f"Roots: {root:.2f}, {root:.2f}")
    else:
        real_part = -b / (2*a)
        imaginary_part = (-discriminant)**0.5 / (2*a)
        print(f"Roots: {real_part:.2f} + {imaginary_part:.2f}i, {real_part:.2f} - {imaginary_part:.2f}i")

# Test cases
test_cases = [
    (1, -3, 2),  # Test Case 1
    (2, 5, 2),   # Test Case 2
    (1, -4, 4)   # Test Case 3
]

# Calculate roots for each test case
for idx, (a, b, c) in enumerate(test_cases, start=1):
    print(f"Test Case {idx}: Coefficients: a={a}, b={b}, c={c}. Expected output: ", end="")
    calculate_roots(a, b, c)
